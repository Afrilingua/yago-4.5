@prefix geo: <http://www.opengis.net/ont/geosparql
@prefix owl: <http://www.w3.org/2002/07/owl
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema
@prefix sh: <http://www.w3.org/ns/shacl
@prefix skos: <http://www.w3.org/2004/02/skos/core
@prefix schema: <https://schema.org/> .
@prefix wd: <http://www.wikidata.org/entity/> .
@prefix wdt: <http://www.wikidata.org/prop/direct/> .
@prefix wpq: <http://www.wikidata.org/prop/qualifier/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema
@prefix ys: <http://yago-knowledge.org/schema
@prefix yago: <http://yago-knowledge.org/resource/> .

################################################################
#                       Preamble
################################################################

# This is the manually designed schema of YAGO 4.1.
# Do not overwrite this file.
#
# Each class defined here will automatically draw 
# (1) its superclasses from schema.org and 
# (2) its subclasses from Wikidata.
# 
# Therefore, classes should be defined here only if
# they have 
# (1) a link to Wikidata and
# (2) properties in which they appear as domain or range 

################################################################
#                Top level classes
################################################################

ys:
	rdfs:label "Manual YAGO 4.1 shapes declaration"@en .

# Disjointness constraints
schema:CreativeWork a rdfs:Class .
schema:Event owl:disjointWith 
    schema:CreativeWork.
schema:Organization owl:disjointWith 
    schema:CreativeWork,
    schema:Event.
schema:Taxon owl:disjointWith 
    schema:CreativeWork,
    schema:Event,
    schema:Organization.
schema:Person owl:disjointWith 
    schema:CreativeWork,
    schema:Event,
	schema:Taxon,
    schema:Organization.
schema:Place owl:disjointWith 
    schema:CreativeWork,
    schema:Event,
	schema:Person,
    schema:Taxon. 
schema:Product owl:disjointWith
    schema:Event,
    schema:Organization,
    schema:Taxon,
	schema:Person,
    schema:Place.	
schema:Intangible  owl:disjointWith
    schema:Event,
    schema:Organization,
    schema:Taxon,
	schema:Person,
    schema:Place.	

# Top-level class of all individuals
# (excluding literals, classes, properties, etc.)
	
schema:Thing a sh:NodeShape ;
    # ys:fromClass wd:Q35120 ; No mapping!
    sh:property [
        sh:path schema:alternateName ;
        sh:datatype rdf:langString ;
        sh:disjoint rdfs:label ;
        ys:fromProperty skos:altLabel, wdt:P225, wdt:1843 ;
    ] ;
    sh:property [
        sh:path rdfs:comment ;
        sh:datatype rdf:langString ;
        sh:uniqueLang true ;
        ys:fromProperty schema:description ;
    ] ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype rdf:langString ;
        sh:uniqueLang true ;
    ] ;
    sh:property [
        sh:path schema:mainEntityOfPage ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path schema:url ;
        sh:datatype xsd:anyURI ;
        # sh:maxCount 1 ;  # Jules Soria 2023-03-27: We allow several URLs per entity.
        ys:fromProperty wdt:P856 ;
    ] ;
    sh:property [
        sh:path owl:sameAs ;
        sh:datatype xsd:anyType ; # Jules Soria 2023-03-27: correctly capitalized        
        ys:fromProperty wdt:P646, wdt:P345;
    ] .

# Class of all classes. Classes can have properties, too, but only annotation properties.
rdfs:Class a sh:NodeShape ;
    sh:property [
        sh:path schema:alternateName ;
        sh:datatype rdf:langString ;
        sh:disjoint rdfs:label ;
        ys:fromProperty skos:altLabel ;
    ] ;
    sh:property [
        sh:path rdfs:comment ;
        sh:datatype rdf:langString ;
        sh:uniqueLang true ;
        ys:fromProperty schema:description ;
    ] ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype rdf:langString ;
        sh:uniqueLang true ;
    ] ;
    sh:property [
        sh:path owl:sameAs ;
        sh:datatype xsd:anyType ; # Jules Soria 2023-03-27: correctly capitalized
    ] ;
    sh:property [
        sh:path schema:mainEntityOfPage ;
        sh:datatype xsd:anyURI ;
    ] . 

################################################################
#                Intangibles
################################################################

# Awards are needed as domain of schema:award
yago:Award a sh:NodeShape ;
    ys:fromClass wd:Q618779 ;
    rdfs:subClassOf schema:Intangible ;
    rdf:label "Award"@en ;
    sh:property [
        sh:path yago:conferredBy ; 
        sh:or (
            [
                sh:node schema:Organization
            ]
            [
                sh:node schema:Person
            ]
        ) ;
        ys:fromProperty wdt:P1027 ;
    ] .

# Religions etc. are intangibles
yago:BeliefSystem a sh:NodeShape ;
	rdfs:subClassOf schema:Intangible ;
    ys:fromClass wd:Q5390013	.

# We need genders as objects of yago:gender
yago:Gender a sh:NodeShape ;
    ys:fromClass wd:Q48264 ;
    rdfs:subClassOf schema:Intangible .


################################################################
#                Media
################################################################

# Jules Soria 2023-03-27: removed because of a lack of interesting properties
# schema:BroadcastChannel a sh:NodeShape ;
#     sh:property [
#         sh:path schema:broadcastChannelId ;
#         sh:datatype xsd:string ;
#         ys:fromProperty wdt:P3970 ;
#     ] .
# schema:RadioChannel a sh:NodeShape ;
#     ys:fromClass wd:Q25582589 .
# schema:TelevisionChannel a sh:NodeShape ;
#     ys:fromClass wd:Q2001305 .
    
schema:CreativeWork a sh:NodeShape ;
    ys:fromClass wd:Q17537576, Q386724 ;
    sh:property [
        sh:path schema:about ;
        sh:node schema:Thing ;
        ys:fromProperty wdt:P921 ;
    ] ;
    sh:property [
        sh:path schema:award ;
        sh:node yago:Award ;
        ys:fromProperty wdt:P166 ;
    ] ;
    sh:property [
        sh:path schema:author ;
        sh:or (
            [
                sh:node schema:Organization
            ]
            [
                sh:node schema:Person
            ]
        ) ;
        ys:fromProperty wdt:P50, wdt:P175, wdt:P170 ; 
    ] ;
    sh:property [
        sh:path schema:character ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P674 ;
    ] ;
    sh:property [
        sh:path schema:contentLocation ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P840 ;
    ] ;
    sh:property [
        sh:path schema:dateCreated ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P571 ;
    ] ;
    sh:property [
        sh:path schema:inLanguage ;
        sh:node schema:Language ;
        ys:fromProperty wdt:P407 ;
    ] .
    
schema:Book a sh:NodeShape ;
    ys:fromClass wd:Q571 ;
    sh:property [
        sh:path schema:isbn ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P212 , wdt:P957 ;
        sh:pattern "^(97[89]-([0-57]-(\\d-\\d{7}|\\d\\d-\\d{6}|\\d\\d\\d-\\d{5}|\\d{4}-\\d{4}|\\d{5}-\\d\\d\\d|\\d{6}-\\d\\d|\\d{7}-\\d)|[89]\\d-(\\d-\\d{6}|\\d\\d-\\d{5}|\\d\\d\\d-\\d{4}|\\d{4}-\\d\\d\\d|\\d{5}-\\d\\d|\\d{6}-\\d)|[69]\\d\\d-(\\d-\\d{5}|\\d\\d-\\d{4}|\\d\\d\\d-\\d\\d\\d|\\d{4}-\\d\\d|\\d{5}-\\d)|99[0-8]\\d-\\d-\\d{4}|99[0-8]\\d-\\d\\d-\\d\\d\\d|99[0-8]\\d-\\d\\d\\d-\\d\\d|99[0-8]\\d-\\d{4}-\\d|999\\d\\d-\\d-\\d\\d\\d|999\\d\\d-\\d\\d-\\d\\d|999\\d\\d-\\d\\d\\d-\\d)-\\d|\\d{9}(\\d|X))|(\\d{1,5}-\\d{1,7}-\\d{1,6}-[0-9X])$"
    ] ;
    sh:property [
        sh:path schema:numberOfPages ;
        sh:datatype xsd:decimal ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P1104 ;
    ] .

schema:Newspaper a sh:NodeShape ;
	rdfs:subClassOf schema:CreativeWork ; # instead of series
    ys:fromClass wd:Q11032 ;
    sh:property [
        sh:path schema:publisher ;
        sh:or (
            [
                sh:node schema:Organization
            ]
            [
                sh:node schema:Person
            ]
        ) ;
        ys:fromProperty wdt:P123 ;
    ] ;
    sh:property [
        sh:path schema:sponsor ;
        sh:or (
            [
                sh:node schema:Organization
            ]
            [
                sh:node schema:Person
            ]
        ) ;
        ys:fromProperty wdt:P859 ;
    ] .

schema:TVSeries a sh:NodeShape ;
	rdfs:subClassOf schema:CreativeWork ; # instead of series
    ys:fromClass wd:Q5398426 ;
    sh:property [
        sh:path schema:actor ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P161 ;
    ] ;
    sh:property [
        sh:path schema:countryOfOrigin ;
        sh:node schema:Country ;
        ys:fromProperty wdt:P495 ;
    ] ;
    sh:property [
        sh:path schema:director ;
        sh:node schema:Person ;
    ] ;
    sh:property [
        sh:path schema:numberOfEpisodes ;
        sh:datatype xsd:decimal ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P1113 ;
    ] ;
    sh:property [
        sh:path schema:numberOfSeasons ;
        sh:datatype xsd:decimal ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P2437 ;
    ] ;   
    sh:property [
        sh:path schema:productionCompany ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P272 ;
    ] .

# Fabian 2023-03-28: removed because of lack of interesting properties
#schema:ComicStory a sh:NodeShape ;
#    ys:fromClass wd:Q1004 ;
#    sh:property [
#        sh:path schema:colorist ;
#        sh:node schema:Person ;
#        ys:fromProperty wdt:P6338 ;
#    ] .

schema:MusicComposition a sh:NodeShape ;
    ys:fromClass wd:Q207628 ;
    sh:property [
        sh:path schema:composer ;
        sh:or (
            [
                sh:node schema:Person
            ]
            [
                sh:node schema:MusicGroup
            ]
        ) ;
        ys:fromProperty wdt:P86 ;
    ] ;
    sh:property [
        sh:path schema:iswcCode ;
        sh:datatype xsd:string ;
        sh:pattern "^T-[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]$" ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P1827 ;
    ] ;
    sh:property [
        sh:path schema:lyricist ;
        sh:or (
            [
                sh:node schema:Person
            ]
            [
                sh:node schema:MusicGroup
            ]
        ) ;
        ys:fromProperty wdt:P676 ;
    ] .

# Fabian 2023-03-28: removed, merged "performer" with "author" in CreativeWork
#schema:MusicAlbum a sh:NodeShape ;
#   ys:fromClass wd:Q482994 ;
#   sh:property [
#       sh:path schema:byArtist ;
#       sh:maxCount 1 ;
#       sh:node schema:MusicGroup ;
#       ys:fromProperty wdt:P175 ;
#   ] .

schema:Movie a sh:NodeShape ;
    ys:fromClass wd:Q11424 ;
    sh:property [
        sh:path schema:actor ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P161 ;
    ] ;
    sh:property [
        sh:path schema:countryOfOrigin ;
        sh:node schema:Country ;
        ys:fromProperty wdt:P495 ;
    ] ;
    sh:property [
        sh:path schema:director ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P57 ;
    ] ;
    sh:property [
        sh:path schema:duration ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P2047 ;
    ] ;
    sh:property [
        sh:path schema:productionCompany ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P272 ;
    ] .

# Fictional entities are Things,
# from  fictional entity (Q14897293) ,  imaginary character (Q115537581) ,  hypothetical entity (Q18706315) ,
#  character that may or may not be fictional (Q21070598),  fictional creature (Q2593744) ,
#  fictional character (Q95074),  non-existent entity (Q64728693),  fictional object (Q15706911)  
yago:FictionalEntity a sh:NodeShape ;
	rdfs:subClassOf schema:Thing ;
	rdfs:label "Fictional entity"@en ;
	sh:property [
        sh:path yago:appearsIn ;
        sh:node schema:CreativeWork ;
        ys:fromProperty wdt:P1080, wdt:P1441, wdt:P4584 ;
    ] ;
	sh:property [
        sh:path schema:author ;
        sh:or (
            [
                sh:node schema:Organization
            ]
            [
                sh:node schema:Person
            ]
        ) ;
        ys:fromProperty wdt:P170, wdt:P50, wdt:P175 ;
    ] ;
	ys:fromClass wd:Q14897293, wd:Q115537581, wd:Q18706315, wd:Q21070598, wd:Q2593744, wd:Q95074, wd:Q64728693, wdt:Q15706911 .
	
# Fabian 2023-04-12: we can't have genre, because that goes to a class (“war films”)
#schema:Play a sh:NodeShape ;
#    ys:fromClass wd:Q25379 ;
#	# Jules Soria 2023-03-27: added one property
#    sh:property [
#        sh:path schema:genre ;
#        sh:datatype xsd:string ;
#        ys:fromProperty wdt:P136 ;
#    ] .

# Fabian 2023-04-12: we only have 19 operating system facts...
#schema:SoftwareApplication a sh:NodeShape ;
#    ys:fromClass wd:Q166142 ;
#    sh:property [
#        sh:path schema:operatingSystem ;
#        sh:node schema:SoftwareApplication ;
#        ys:fromProperty wdt:P306 ;
#    ] .
	# Jules Soria 2023-03-27: removed
    # sh:property [
    #     sh:path schema:installUrl ;
    #     sh:datatype xsd:anyURI ;
    #     ys:fromProperty wdt:P1324 ;
    # ] .
    

# Fabian 2023-03-28: no important properties, removed
#schema:VideoGame a sh:NodeShape ;
#    ys:fromClass wd:Q7889 ;
#    sh:property [
#        sh:path schema:actor ;
#        sh:node schema:Person ;
#        ys:fromProperty wdt:P161 ;
#    ] ;
#    sh:property [
#        sh:path schema:director ;
#        sh:maxCount 1 ;
#        sh:node schema:Person ;
#        ys:fromProperty wdt:P57 ;
#    ] .
#
# schema:Drawing a sh:NodeShape ;
#     ys:fromClass wd:Q93184 .
# schema:Painting a sh:NodeShape ;
#     ys:fromClass wd:Q3305213 .
# schema:Sculpture a sh:NodeShape ;
#     ys:fromClass wd:Q860861 .
# schema:ComputerLanguage a sh:NodeShape ;
#     ys:fromClass wd:Q629206 .


################################################################
#                Events
################################################################


schema:Event a sh:NodeShape ;
    # Merge "occurrence" and "event", also to avoid having "event" twice in YAGO
    ys:fromClass wd:Q1190554, wd:Q1656682 ;
    sh:property [
        sh:path schema:about ;
        sh:node schema:Thing ;
        ys:fromProperty wdt:P921 ;
    ] ;
	# Fabian 2023-04-12: only 8 facts
    #sh:property [
    #    sh:path schema:contributor ;
    #    sh:or (
    #        [
    #            sh:node schema:Organization
    #        ]
    #        [
    #            sh:node schema:Person
    #        ]
    #    ) ;
    #    ys:fromProperty wdt:P767 ;
    #] ;
	# Fabian 2023-03-28: removed to avoid redundancy with startDate and endDate
    #sh:property [
    #    sh:path schema:duration ;
    #    sh:datatype xsd:duration ;
    #    ys:fromProperty wdt:P2047 ;
    #] ;
    sh:property [
        sh:path schema:location ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P131 , wdt:P276 , wdt:P706 , wdt:P4552 ;
    ] ;
    sh:property [
        sh:path schema:organizer ;
        sh:or (
            [
                sh:node schema:Person
            ]
            [
			
                sh:node schema:Organization
            ]
        ) ;
        ys:fromProperty wdt:P664 ;
    ] ;
    sh:property [
        sh:path schema:startDate ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P580 ;
    ] ;
    sh:property [
        sh:path schema:endDate ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P582 ;
    ] ;
    sh:property [
        sh:path schema:sponsor ;
        sh:or (
            [
                sh:node schema:Organization
            ]
            [
                sh:node schema:Person
            ]
        ) ;
        ys:fromProperty wdt:P859 ;
    ] ;
	# Fabian 2023-03-28: removed to avoid redundancy with subEvent
    #sh:property [
    #    sh:path schema:superEvent ;
    #    sh:node schema:Event ;
    #    ys:fromProperty wdt:P361 ;
    #] ;
    sh:property [
        sh:path schema:subEvent ;
        sh:node schema:Event ;
        ys:fromProperty wdt:P527 ;
    ] .

# Needed for sports events, but too few facts
#yago:Sport a sh:NodeShape ;
#    ys:fromClass wd:Q349 ;
#    rdfs:subClassOf schema:Intangible ;
#    rdf:label "Sport" .

schema:SportsEvent a sh:NodeShape ;
    ys:fromClass wd:Q16510064 ;
    sh:property [
        sh:path schema:competitor ;
        sh:or (
            [
                sh:node schema:Person
            ]
            [
                sh:node schema:SportsTeam
            ]
        ) ;
        ys:fromProperty wdt:P710 , wdt:P1923 ;
    ] .
	# Fabian 2023-04-12: only 8 facts
    #sh:property [
    #    sh:path schema:sport ;
    #    sh:node yago:Sport ;
    #    ys:fromProperty wdt:P641 ;
    #] .

# Fabian 2023-03-28: removed for lack of properties
#schema:Festival a sh:NodeShape ;
#    ys:fromClass wd:Q132241 .


# Needed as range of the property schema:inLanguage
schema:Language a sh:NodeShape ;
    ys:fromClass wd:Q34770 .

################################################################
#                Organizations
################################################################


schema:Organization a sh:NodeShape ;
    ys:fromClass wd:Q43229 ;
    sh:property [
        sh:path schema:award ;
        sh:node yago:Award ;
        ys:fromProperty wdt:P166 ;
    ] ;
    sh:property [
        sh:path schema:dissolutionDate ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P576 ;
    ] ;
    sh:property [
        sh:path schema:duns ;
        sh:datatype xsd:string ;
        sh:pattern "^\\d{9}$" ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P2771 ;
    ] ;
    sh:property [
        sh:path schema:founder ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P112 ;
    ] ;
    sh:property [
        sh:path schema:leader ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P35, wdt:P6 ;
    ] ;
    sh:property [
        sh:path schema:motto ;
        sh:datatype xsd:string ;
        ys:fromProperty wdt:P1451 ;
    ] ;
    sh:property [
        sh:path schema:address ;
        sh:datatype xsd:string ;
        ys:fromProperty wdt:P6375 ;
    ] ;
    sh:property [
        sh:path schema:dateCreated ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P571 ;
    ] ;
    sh:property [
        sh:path schema:leiCode ;
        sh:datatype xsd:string ;
        sh:pattern "^[0-9A-Z]{18}[0-9]{2}$" ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P1278 ;
    ] ;
    sh:property [
        sh:path schema:location ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P131 , wdt:P276 , wdt:P706 , wdt:P4552 ;
    ] ;
    sh:property [
        sh:path schema:memberOf ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P463 ;
    ] ;
    sh:property [
        sh:path schema:numberOfEmployees ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P1128 ;
    ] ;
	# Fabian 2023-04-12 removed, should be attached to person
    #sh:property [
    #    sh:path schema:employee;
    #    sh:node schema:Person ;
    #    ys:fromProperty wdt:P1128 ;
    #] ;
	# Fabian 2023-03-28: removed to avoid redundancy with parentOrganization
    # sh:property [
    #     sh:path schema:subOrganization ;
    #     sh:node schema:Organization ;
    #     ys:fromProperty wdt:P355 ;
    # ] ;
    sh:property [
        sh:path schema:parentOrganization ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P749 ;
    ] .

schema:Airline a sh:NodeShape ;
    ys:fromClass wd:Q46970 ;
    sh:property [
        sh:path schema:iataCode ;
        sh:datatype xsd:string ;
        sh:pattern "^[A-Z0-9]{2}$" ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P229 ;
    ] ;
    sh:property [
        sh:path schema:icaoCode ;
        sh:datatype xsd:string ;
        sh:pattern "^[A-Z]{3}$" ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P230 ;
    ] .

schema:Corporation a sh:NodeShape ;
    ys:fromClass wd:Q783794 ;
	ys:fromClass wd:Q4830453 . # Fabian 2023-03-29: we merge in businesses here

# We attach it under organization, to avoid CivicStructure
schema:EducationalOrganization a sh:NodeShape ;
	rdfs:subClassOf schema:Organization ;
    ys:fromClass wd:Q5341295 ;
    sh:property [
        sh:path schema:studentsCount ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P2196 ;
    ] .

# Fabian 2023-03-28: removed because of lack of properties
# schema:ResearchOrganization a sh:NodeShape ; 
#     ys:fromClass wd:Q16519632 .
# schema:CollegeOrUniversity a sh:NodeShape ;
#     ys:fromClass wd:Q38723 .
# schema:GovernmentOrganization a sh:NodeShape ;
#     ys:fromClass wd:Q2659904 .
# schema:MedicalOrganization a sh:NodeShape ;
#     ys:fromClass wd:Q4287745 .
# schema:NGO a sh:NodeShape ;
#     ys:fromClass wd:Q79913 .
# schema:DanceGroup a sh:NodeShape ;
#     ys:fromClass wd:Q2393314 .

schema:MusicGroup a sh:NodeShape ;
    ys:fromClass wd:Q215380 ;
    sh:property [
        sh:path schema:influencedBy ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P737 ;
    ] .
    # Fabian 2023-04-12: we can't have genre, because that goes to a class (“war films”)
	#sh:property [
    #    sh:path schema:genre ;
    #    sh:datatype xsd:string ;
    #    ys:fromProperty wdt:P136 ;
    #] .
	# Fabian 2023-03-28: removed to avoid redundancy with memberOf
    #sh:property [
    #    sh:path schema:members ;
    #    sh:node schema:Person ;
    #    ys:fromProperty wdt:P527 ;
    #] .

# Fabian 2023-03-28: removed for lack of properties
#schema:TheaterGroup a sh:NodeShape ;
#    ys:fromClass wd:Q2416217 .
#schema:SportsOrganization a sh:NodeShape ;
#    ys:fromClass wd:Q4438121 .
#schema:WorkersUnion a sh:NodeShape ;
#    ys:fromClass wd:Q178790 .

# Needed for sport events
schema:SportsTeam a sh:NodeShape ;
    ys:fromClass wd:Q12973014 .


################################################################
#                Persons
################################################################

# Fabian 2023-04-24: Was needed as range of hasOccupation,
# but occupations are now classes
#schema:Occupation a sh:NodeShape ;
#    ys:fromClass wd:Q12737077 .

schema:Person a sh:NodeShape ;
    ys:fromClass wd:Q5 ;	
    sh:property [
        sh:path yago:beliefSystem ;
        sh:node yago:BeliefSystem ;
        ys:fromProperty wdt:P140 ;
    ] ;
    sh:property [
        sh:path yago:academicDegree ;
        sh:node yago:Award ;
        ys:fromProperty wdt:P512 ;
    ] ;
    sh:property [
        sh:path schema:affiliation ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P1416 ;
    ] ;
    sh:property [
        sh:path schema:alumniOf ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P69 ;
    ] ;
    sh:property [
        sh:path schema:award ;
        sh:node yago:Award ;
        ys:fromProperty wdt:P166 ;
    ] ;
    sh:property [
        sh:path schema:birthDate ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P569 ;
    ] ;
    sh:property [
        sh:path schema:birthPlace ;
        sh:node schema:Place ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P19 ;
    ] ;
    sh:property [
        sh:path schema:children ;
        sh:node schema:Person ;
       ys:fromProperty wdt:P40 ;
    ] ;
    sh:property [
        sh:path schema:deathDate ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P570 ;
    ] ;
    sh:property [
        sh:path schema:deathPlace ;
        sh:node schema:Place ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P20 ;
    ] ;
    sh:property [
        sh:path schema:gender ;
        sh:node yago:Gender ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P21 ;
    ] ;
    # Fabian 2023-04-24: Occupations become class memberships
    #sh:property [
    #    sh:path schema:hasOccupation ;
    #    sh:node schema:Occupation ;
    #    ys:fromProperty wdt:P106 ;
    #] ;
    sh:property [
        sh:path schema:homeLocation ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P551 ;
    ] ;
    sh:property [
        sh:path schema:knowsLanguage ;
        sh:node schema:Language ;
        ys:fromProperty wdt:P1412 ;
    ] ;
    sh:property [
        sh:path schema:memberOf ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P463 , wdt:P54 , wdt:P102 ;
    ] ;
    sh:property [
        sh:path schema:nationality ;
        sh:node schema:Country ;
        ys:fromProperty wdt:P27 ;
    ] ;
    sh:property [
        sh:path schema:owns ;
        sh:node schema:Thing ; 
        ys:fromProperty wdt:P1830 ;
    ] ;
    sh:property [
        sh:path schema:spouse ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P26 ;
    ] .


################################################################
#                Places
################################################################


# General superclass for geographic places
# We don't map this to Wikidata, because we want to control the types of places we have in YAGO

schema:Place a sh:NodeShape ;
    # No mapping here, to avoid getting messy subclasses
    # ys:fromClass wd:Q17334923 ; 
    sh:property [
        sh:path schema:containedInPlace ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P131 , wdt:P276 , wdt:P706 , wdt:P4552, wdt:P17 ;
    ] ;
    sh:property [
        sh:path schema:area ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P2046 ;
    ] ;
    sh:property [
        sh:path schema:highestPoint ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P610 ;
    ] ;
    sh:property [
        sh:path schema:lowestPoint ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P1589 ;
    ] ;
    sh:property [
        sh:path schema:neighbors ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P47, wdt:P206 ;
    ] ;
    # Fabian 2023-04-12: included in neighbors
	#sh:property [
    #    sh:path schema:neighborsBodyOfWater ;
    #    sh:node schema:BodyOfWater ;
    #    ys:fromProperty wdt:P206 ;
    #] ;
    sh:property [
        sh:path schema:elevation ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P2044 ;
    ] ;
    sh:property [
        sh:path schema:geo ;
        sh:datatype geo:wktLiteral ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P625 ;
    ] .


# ------------------ Planets ---------------

# One permissible subclass of schema:Place is yago:AstronomicalObject
# We import all subclasses from Wikidata
yago:AstronomicalObject a sh:NodeShape ;
	rdfs:subClassOf schema:Place ;
	sh:property [
        sh:path yago:parentBody ;
        sh:node yago:AstronomicalObject ;
        ys:fromProperty wdt:P397 ;
    ] ;    
	sh:property [
        sh:path yago:mass ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P2067 ;
    ] ;    
	sh:property [
        sh:path yago:distanceFromEarth ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P2583 ;
    ] ;    
	ys:fromClass wd:Q6999.

# ------------------ Administrative Areas ---------------

# One permissible subclass of schema:Place is Admininstrative Area
# We import all subclasses from Wikidata
schema:AdministrativeArea a sh:NodeShape ;
    sh:property [
        sh:path schema:dateCreated ;
        sh:datatype xsd:dateTime ;
        ys:fromProperty wdt:P571 ;
		sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:demonym ;
        sh:datatype xsd:string ;
        ys:fromProperty wdt:P1549 ;
    ] ;
    sh:property [
        sh:path schema:leader ;
        sh:node schema:Person ;
        ys:fromProperty wdt:P6, wdt:P35 ;
    ] ;
    sh:property [
        sh:path schema:populationNumber ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P1082 ;
    ] ;
    sh:property [
        sh:path schema:postalCode ;
        sh:datatype xsd:string ;
        ys:fromProperty wdt:P281 ;
    ] ;
    sh:property [
        sh:path schema:motto ;
        sh:datatype xsd:string ;
        ys:fromProperty wdt:P1451 ;
    ] ;
    sh:property [
        sh:path schema:memberOf ;
        sh:node schema:Organization ;
        ys:fromProperty wdt:P463 ;
    ] ;
    sh:property [
	    # Fabian 2023-03-28: TODO, is this redundant with containedInPlace^- ?
        sh:path schema:administrates ;
        sh:node schema:Place ;
        ys:fromProperty wdt:P150 ;
    ] ;
    ys:fromClass wd:Q56061 .

# Needed for capitals, mapped to "City or Town" in Wikidata, and to City.
# "Human Settlement" , Q486972 contains very messy subclasses
schema:City a sh:NodeShape ;
    ys:fromClass wd:Q7930989, wd:Q515 .

# Needed because of additional properties
schema:Country a sh:NodeShape ;
    sh:property [
        sh:path yago:capital ;
        sh:node schema:City ;
        ys:fromProperty wdt:P36 ;
    ] ;
	sh:property [
        sh:path schema:officialLanguage ;
        sh:node schema:Language ;
        ys:fromProperty wdt:P37 ;
    ] ;
    sh:property [
        sh:path schema:humanDevelopmentIndex ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P1081 ;
    ] ;
    sh:property [
        sh:path schema:unemploymentRate ;
        sh:datatype xsd:decimal ;
        ys:fromProperty wdt:P1198 ;
    ] ;
	# Fabian: 2023-04-12 don't know how to handle the currency...
    #sh:property [
    #    sh:path schema:medianIncome ;
    #    sh:datatype xsd:decimal ;
    #    ys:fromProperty wdt:P3529 ;
    #] ;
    ys:fromClass wd:Q6256 .

# Removed for lack of properties
#schema:State a sh:NodeShape ;
#    ys:fromClass wd:Q107390 .


# --------------------- Land Forms ------------------------

# One permissible subclass of schema:Place are land forms,
# from natural geographic object, terrain, Landform, landmass, geolocation, georegion, geographical area
schema:Landform a sh:NodeShape ;
    rdfs:subClassOf schema:Place ;
	ys:fromClass wd:Q35145263, wd:Q14524493, wd:Q271669, wd:Q205895, wd:Q271669, wd:Q2221906, wd:Q3622002, wd:Q82794.
    
# Bodies of water are Landforms.
# Linked to body of water and marine body of water
schema:BodyOfWater a sh:NodeShape ;
	sh:property [
        sh:path yago:flowsInto ;
        sh:node schema:BodyOfWater ;
        ys:fromProperty wdt:P403, wdt:P201 ;
    ] ;
    ys:fromClass wd:Q15324, wd:Q116126039 .

# Continents
schema:Continent a sh:NodeShape ;
    rdfs:subClassOf schema:Landform ;
    ys:fromClass wd:Q5107 .


# -------------------- Human-made Places --------------------

# One permissible subclass of schema:Place are human made places.
# Mapped to "architectural structure" and Human Made Feature (twice...) in Wikidata.
# We thus import all subclasses from Wikidata here, 
# and need to define classes only to define properties
yago:HumanMadeGeographicalEntity a sh:NodeShape ;
	rdfs:subClassOf schema:Place ;
	rdfs:label "Human-made geographical entity"@en ;
    ys:fromClass wd:Q811979, wd:Q811430, wd:Q811463, wd:Q35145743 .

# Transit routes such as roads and railways.
# Mapped to "thoroughfare" Wikidata (not a subclass of arch struc), 
# not existing in schema.org
yago:Way a sh:NodeShape ;
	rdfs:label "Way"@en ;	
	rdfs:subClassOf yago:HumanMadeGeographicalEntity ;
    ys:fromClass wd:Q83620 .

# Listed here to add properties, and attached to yago:HumanMadeGeographicalEntity to avoid schema:CivicStructure
schema:Airport a sh:NodeShape ;
    rdfs:subClassOf yago:HumanMadeGeographicalEntity ;
    ys:fromClass wd:Q1248784 ;
    sh:property [
        sh:path schema:iataCode ;
        sh:datatype xsd:string ;
        sh:pattern "^[A-Z]{3}$" ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P238 ;
    ] ;
    sh:property [
        sh:path schema:icaoCode ;
        sh:datatype xsd:string ;
        sh:pattern "^([A-Z]{2}|[CKY][A-Z0-9])[A-Z0-9]{2}$" ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P239 ;
    ] .

# schema:Bridge a sh:NodeShape ;
#     ys:fromClass wd:Q12280 .
# schema:Museum a sh:NodeShape ;
#     ys:fromClass wd:Q33506 .
# schema:Park a sh:NodeShape ;
#     ys:fromClass wd:Q22698 .
# schema:PerformingArtsTheater a sh:NodeShape ;
#     ys:fromClass wd:Q24354 .
# schema:PlaceOfWorship a sh:NodeShape ;
#     ys:fromClass wd:Q1370598 .
# schema:BuddhistTemple a sh:NodeShape ;
#     ys:fromClass wd:Q5393308 .
# schema:Church a sh:NodeShape ;
#     ys:fromClass wd:Q16970 .
# schema:CatholicChurch a sh:NodeShape ;
#     ys:fromClass wd:Q1088552 .
# schema:HinduTemple a sh:NodeShape ;
#     ys:fromClass wd:Q842402 .
# schema:Mosque a sh:NodeShape ;
#     ys:fromClass wd:Q32815 .
# schema:Synagogue a sh:NodeShape ;
#     ys:fromClass wd:Q34627 .
# schema:Landform a sh:NodeShape ;
#     ys:fromClass wd:Q271669 .
# schema:Canal a sh:NodeShape ;
#     ys:fromClass wd:Q12284 .
# schema:LakeBodyOfWater a sh:NodeShape ;
#     ys:fromClass wd:Q23397 .
# schema:OceanBodyOfWater a sh:NodeShape ;
#     ys:fromClass wd:Q9430 .
# schema:RiverBodyOfWater a sh:NodeShape ;
#     ys:fromClass wd:Q4022 .
# schema:SeaBodyOfWater a sh:NodeShape ;
#     ys:fromClass wd:Q165 .
# schema:Waterfall a sh:NodeShape ;
#     ys:fromClass wd:Q34038 .
# schema:Continent a sh:NodeShape ;
#     ys:fromClass wd:Q5107 .
# schema:Mountain a sh:NodeShape ;
#     ys:fromClass wd:Q8502 .
# schema:Volcano a sh:NodeShape ;
#     ys:fromClass wd:Q8072 .
# schema:LandmarksOrHistoricalBuildings a sh:NodeShape ;
#     ys:fromClass wd:Q51369558 .


################################################################
#                Commercial Products
################################################################

# An individual product with a GTIN
schema:Product a sh:NodeShape ;
    ys:fromClass wd:Q2424752 ;
    sh:property [
        sh:path schema:award ;
        sh:node yago:Award ;
        ys:fromProperty wdt:P166 ;
    ] ;
    sh:property [
        sh:path schema:manufacturer ;
        sh:node schema:Corporation ;
        ys:fromProperty wdt:P176, wdt:P178 ;
    ] ;
    sh:property [
        sh:path schema:dateCreated ;
        sh:or (
            [
                sh:datatype xsd:dateTime
            ]
            [
                sh:datatype xsd:date
            ]
            [
                sh:datatype xsd:gYearMonth
            ]
            [
                sh:datatype xsd:gYear
            ]
        ) ;
        sh:maxCount 1 ;
        ys:fromProperty wdt:P577 ;
    ] ;	
    sh:property [
        sh:path schema:gtin ;
        sh:datatype xsd:string ;
        sh:pattern "^\\d{12,14}|\\d{8}$" ;
        ys:fromProperty wdt:P3962 ;
    ] .

# Removed for lack of properties
# schema:Vehicle a sh:NodeShape ;
#     ys:fromClass wd:Q42889 .
# schema:BusOrCoach a sh:NodeShape ;
#     ys:fromClass wd:Q5638 .
# schema:Car a sh:NodeShape ;
#     ys:fromClass wd:Q1144312 .
# schema:Motorcycle a sh:NodeShape ;
#     ys:fromClass wd:Q34493 .


################################################################
#                Animals and other organisms
################################################################

# We model every taxon not as a class, but as an instance.
# This is the only way in which we can make assertions about taxons
schema:Taxon a sh:NodeShape;
	sh:property [
        sh:path schema:parentTaxon ;
        sh:node schema:Taxon ;
        ys:fromProperty wdt:P171 ;
    ] ;
	sh:property [
        sh:path yago:consumes ;
        sh:node schema:Taxon ;
        ys:fromProperty wdt:P1034 ;
    ] ;
	ys:fromClass wd:Q7239 .
	
################################################################
#                Time annotation
################################################################

ys:AnnotationPropertyShape a rdfs:Property ;
    rdfs:subPropertyOf sh:PropertyShape .

ys:startDateAnnotation a ys:AnnotationPropertyShape ;
    sh:path schema:startDate ;
    sh:or (
        [
            sh:datatype xsd:dateTime
        ]
        [
            sh:datatype xsd:date
        ]
        [
            sh:datatype xsd:gYearMonth
        ]
        [
            sh:datatype xsd:gYear
        ]
    ) ;
    sh:maxCount 1 ;
    ys:fromProperty wpq:P580 .

ys:endDateAnnotation a ys:AnnotationPropertyShape ;
    sh:path schema:endDate ;
    sh:or (
        [
            sh:datatype xsd:dateTime
        ]
        [
            sh:datatype xsd:date
        ]
        [
            sh:datatype xsd:gYearMonth
        ]
        [
            sh:datatype xsd:gYear
        ]
    ) ;
    sh:maxCount 1 ;
    ys:fromProperty wpq:P582 .
